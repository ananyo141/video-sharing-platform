version: "3"

services:
  # API Gateway #
  traefik:
    image: traefik:v2.10
    restart: always
    command: --api.insecure=true --providers.docker
    ports:
      - "8001:80"
      - "8002:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - video-sharing-platform

  # User Service #
  user-management-dev:
    volumes:
      - ./user-management:/app
    build:
      context: ./user-management
      dockerfile: dev.dockerfile
    depends_on:
      - user-db
      - traefik
    labels:
      - "traefik.http.routers.user-management-dev.rule=(PathPrefix(`/users`) || PathPrefix(`/auth`))"
    networks:
      - video-sharing-platform
    env_file:
      - ./user-management/.env.docker

  user-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: devdocker
      POSTGRES_PASSWORD: dbpassword
      POSTGRES_DB: user-docker-db
    networks:
      - video-sharing-platform
    # volumes:
    #   - user-data:/var/lib/postgresql/data
  # --- END --- #

  # Media Service #
  media-handler-dev:
    volumes:
      - ./media-handler:/app
    build:
      context: ./media-handler
      dockerfile: dev.dockerfile
    depends_on:
      - media-db
      - traefik
    labels:
      - "traefik.http.routers.media-handler-dev.rule=PathPrefix(`/media`)"
    networks:
      - video-sharing-platform
    env_file:
      - ./media-handler/.env.docker

  media-db:
    image: mongo:latest
    networks:
      - video-sharing-platform
    # volumes:
    #   - media-data:/data/db
  # --- END --- #

  # Video Processing Service #
  video-service-dev:
    volumes:
      - ./video-processing:/app
    build:
      context: ./video-processing
      dockerfile: dev.dockerfile
    depends_on:
      - video-bucket
      - video-redis
      - traefik
    labels:
      - "traefik.http.routers.video-service-dev.rule=PathPrefix(`/video`)"
    networks:
      - video-sharing-platform
    env_file:
      - ./video-processing/.env.docker

  video-redis:
    image: redis:7-alpine
    networks:
      - video-sharing-platform

  video-bucket:
    image: minio/minio
    command: server /data/ --console-address :9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "8003:9001" # Web Interface
    networks:
      - video-sharing-platform
    # volumes:
    #   - video-bucket-volume:/data
  # --- END --- #

  # Web Client #
  web-client-dev:
    volumes:
      - ./web-client:/app
    build:
      context: ./web-client
      dockerfile: dev.dockerfile
    depends_on:
      - traefik
    labels:
      - "traefik.http.routers.web-client-dev.rule=PathPrefix(`/`)"
    networks:
      - video-sharing-platform
  # --- END --- #

networks:
  video-sharing-platform:
# volumes:
# user-data:
# media-data:
# video-bucket-volume:
