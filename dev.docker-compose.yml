version: "3"

services:
  # Media Service #
  media-handler-dev:
    volumes:
      - ./media-handler:/app
    build:
      context: ./media-handler
      dockerfile: dev.dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - media-db
    networks:
      - video-sharing-platform
    env_file:
      - ./media-handler/.env.docker

  media-db:
    image: mongo:latest
    ports:
      - "27017:27017"
    networks:
      - video-sharing-platform
    # volumes:
    #   - media-data:/data/db
  # --- END --- #

  # User Service #
  user-management-dev:
    volumes:
      - ./user-management:/app
    build:
      context: ./user-management
      dockerfile: dev.dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - user-db
    networks:
      - video-sharing-platform
    env_file:
      - ./user-management/.env.docker

  user-db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: devdocker
      POSTGRES_PASSWORD: dbpassword
      POSTGRES_DB: user-docker-db
    ports:
      - "5432:5432"
    networks:
      - video-sharing-platform
    # volumes:
    #   - user-data:/var/lib/postgresql/data
  # --- END --- #

  # Video Processing Service #
  video-service-dev:
    volumes:
      - ./video-processing:/app
    build:
      context: ./video-processing
      dockerfile: dev.dockerfile
    ports:
      - "8003:8003"
    depends_on:
      - video-bucket
    networks:
      - video-sharing-platform
    env_file:
      - ./video-processing/.env.docker

  video-bucket:
    image: minio/minio
    command: server /data/ --console-address :9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001" # Web Interface
    networks:
      - video-sharing-platform
    volumes:
      - video-bucket-volume:/data
  # --- END --- #

networks:
  video-sharing-platform:

volumes:
  # user-data:
  # media-data:
  video-bucket-volume:
