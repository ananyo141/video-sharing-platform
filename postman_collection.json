{
	"info": {
		"_postman_id": "8add0f58-8602-403a-92c6-386a09f9dd88",
		"name": "video-sharing-platform",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26692677",
		"_collection_link": "https://orange-trinity-398308.postman.co/workspace/video-sharing-platform~0532b73d-ec0e-4731-bea3-b386784455b5/collection/26692677-8add0f58-8602-403a-92c6-386a09f9dd88?action=share&source=collection_link&creator=26692677"
	},
	"item": [
		{
			"name": "user-management",
			"item": [
				{
					"name": "users",
					"item": [
						{
							"name": "get users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl}}/users/",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"users",
										""
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "get user profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl}}/users/profile",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"users",
										"profile"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "get users by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl}}/users/1",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"users",
										"1"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "get users by ids",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseurl}}/users/?id=3&id=2&id=1",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"users",
										""
									],
									"query": [
										{
											"key": "id",
											"value": "3"
										},
										{
											"key": "id",
											"value": "2"
										},
										{
											"key": "id",
											"value": "1"
										}
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "patch user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"new\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/users/profile",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"users",
										"profile"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "delete user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"fadf\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/users/profile",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"users",
										"profile"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						}
					]
				},
				{
					"name": "auth",
					"item": [
						{
							"name": "login",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"test1@co.com\",\n  \"password\": \"da\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/auth/login",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"auth",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "register",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"test1@co.com\",\n  \"password\": \"da\"\n}\n\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/auth/register/",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"auth",
										"register",
										""
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "logout",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"test\",\n  \"password\": \"da\"\n}ß",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/auth/logout",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"auth",
										"logout"
									]
								}
							},
							"response": []
						},
						{
							"name": "verify_token",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/auth/verify_token",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"auth",
										"verify_token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "healthcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/users/healthcheck",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"users",
								"healthcheck"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "media-handler",
			"item": [
				{
					"name": "videos",
					"item": [
						{
							"name": "get videos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n    videos {\n        _id\n        title\n        description\n        userId\n        createdAt\n        updatedAt\n        user {\n            email\n        }\n        likes\n        comments {\n            _id\n            text\n            user {\n                id\n                email\n                role_id\n            }\n        }\n    }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{baseurl}}/media/graphql",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"media",
										"graphql"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "get video progress",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "subscription {\n    videoProgress(videoId: \"65def3ae05e53bd98dcedc23\") {\n        videoId\n        userId\n        progress\n        updatedAt\n    }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{baseurl}}/media/graphql",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"media",
										"graphql"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "get videos query",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n    videos(userId: 2, search: \"nice\") {\n        _id\n        title\n        description\n        userId\n        createdAt\n        updatedAt\n        user {\n            email\n        }\n        likes\n        comments {\n            _id\n            text\n            user {\n                id\n                email\n                role_id\n            }\n        }\n    }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{baseurl}}/media/graphql",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"media",
										"graphql"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "get video",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n  video(id: \"65d4c7f7b2dad49080c5a392\") {\n    _id\n    title\n    userId\n    likes\n    comments {\n        _id\n        text\n        userId\n    }\n  }\n}\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{baseurl}}/media/graphql",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"media",
										"graphql"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "like video",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\n  likeVideo(id: \"65d4c7f7b2dad49080c5a392\") {\n    _id\n    likes\n  }\n}\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{baseurl}}/media/graphql",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"media",
										"graphql"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "delete video",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\n  deleteVideo(id: \"65ccc6f68976ac4668969bb8\") {\n    _id\n    title\n  }\n}\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{baseurl}}/media/graphql",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"media",
										"graphql"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "update video",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\n  updateVideo(\n    id: \"65c9298b5fca9e6ce70470cf\"\n    input: { title: \"updated\" }\n  ) {\n    _id\n    title\n  }\n}\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{baseurl}}/media/graphql",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"media",
										"graphql"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						},
						{
							"name": "create video",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\n  createVideo(\n    input: { title: \"my vlog\", description: \"this is my new vlog\", fileExtension: \"mp4\" }\n  ) {\n    presignedUrl\n    video {\n      _id\n      title\n      userId\n      source\n    }\n  }\n}\n",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{baseurl}}/media/graphql",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"media",
										"graphql"
									]
								},
								"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
							},
							"response": []
						}
					]
				},
				{
					"name": "comments",
					"item": [
						{
							"name": "get comment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\n    comment(id: \"65cfabece6f894c8e1e4196b\") {\n    _id\n    text\n    userId\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{baseurl}}/media/graphql",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"media",
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "add comment",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\n  createComment(input: {\n  text: \"new comment 3\",\n  videoId: \"65d7a0b2d80cbc30753c37ff\"\n  }) {\n    _id\n    text\n    createdAt\n    userId\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{baseurl}}/media/graphql",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"media",
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "update comment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\n  updateComment(id: \"65d460415bd976d49ea44f25\", input: {\n  text: \"ths is fine\"\n  }) {\n    _id\n    text\n    createdAt\n    updatedAt\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{baseurl}}/media/graphql",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"media",
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete comment",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\n  deleteComment(id: \"65d45bbfc7eb4af101beb8d0\") {\n    _id\n    text\n    createdAt\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{baseurl}}/media/graphql",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"media",
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "healthcheck",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/media/",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"media",
								""
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": []
				}
			]
		},
		{
			"name": "s3-service",
			"item": [
				{
					"name": "get presigned url",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseurl}}/assets/presignedUrl?filename=user_video.mp4",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"assets",
								"presignedUrl"
							],
							"query": [
								{
									"key": "filename",
									"value": "user_video.mp4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "upload images",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/Users/ananyo/Desktop/Screenshots/Screenshot 2024-02-29 at 11.54.44 AM.png"
								}
							]
						},
						"url": {
							"raw": "{{baseurl}}/assets/images",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"assets",
								"images"
							]
						}
					},
					"response": []
				},
				{
					"name": "upload misc",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/Users/ananyo/Desktop/cover_letter.pdf"
								}
							]
						},
						"url": {
							"raw": "{{baseurl}}/assets/misc",
							"host": [
								"{{baseurl}}"
							],
							"path": [
								"assets",
								"misc"
							]
						}
					},
					"response": []
				},
				{
					"name": "upload with presigned url",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"host": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Host",
								"value": "video-bucket:9000",
								"type": "text"
							}
						],
						"body": {
							"mode": "file",
							"file": {
								"src": "/Users/ananyo/workspace/personal/repositories/tus-video-upload-script/deva.mp4"
							}
						},
						"url": {
							"raw": "http://localhost:9000/video-bucket/uploads/user_video_1709133939450.mp4?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=minioadmin%2F20240228%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20240228T152539Z&X-Amz-Expires=900&X-Amz-SignedHeaders=host&X-Amz-Signature=f8994d7af445fd460649bcd82b09257acbb2ee8b549aa142d1df42b07af8362e",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "9000",
							"path": [
								"video-bucket",
								"uploads",
								"user_video_1709133939450.mp4"
							],
							"query": [
								{
									"key": "X-Amz-Algorithm",
									"value": "AWS4-HMAC-SHA256"
								},
								{
									"key": "X-Amz-Credential",
									"value": "minioadmin%2F20240228%2Fus-east-1%2Fs3%2Faws4_request"
								},
								{
									"key": "X-Amz-Date",
									"value": "20240228T152539Z"
								},
								{
									"key": "X-Amz-Expires",
									"value": "900"
								},
								{
									"key": "X-Amz-SignedHeaders",
									"value": "host"
								},
								{
									"key": "X-Amz-Signature",
									"value": "f8994d7af445fd460649bcd82b09257acbb2ee8b549aa142d1df42b07af8362e"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseurl",
			"value": "localhost:8002"
		}
	]
}